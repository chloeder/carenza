// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(uuid())
  clerkUserId String   @unique
  email       String   @unique
  name        String?
  imageUrl    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // this will be update when input resume
  role            String?
  bio             String?
  experience      Json[]   @default([])
  education       Json[]   @default([])
  relevantSkills  String[] @default([])
  skillsToImprove String[] @default([])
  softSkills      String[] @default([])
  hardSkills      String[] @default([])
  certifications  String[] @default([])
  projects        String[] @default([])
  achievements    String[] @default([])

  cover_letters CoverLetter[]
  resumes       Resume[]

  @@map("users")
}

model Resume {
  id       String  @id @default(uuid())
  userId   String
  content  String
  atsScore Int?
  feedback String?
  summary  String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])

  @@map("resumes")
}

model CoverLetter {
  id             String @id @default(uuid())
  userId         String
  content        String
  jobDescription String
  jobTitle       String
  companyName    String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])

  @@map("cover_letters")
}
